<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fit2cloud.mc.dao.ext.ExtOrganizationMapper">

    <resultMap id="OrganizationDtoMap" type="com.fit2cloud.mc.dto.OrganizationDTO"
               extends="com.fit2cloud.commons.server.base.mapper.OrganizationMapper.BaseResultMap">
        <result column="countOrgAdmin" jdbcType="BIGINT" property="countOrgAdmin"/>
        <result column="countWorkspace" jdbcType="BIGINT" property="countWorkspace"/>
    </resultMap>

    <select id="paging" resultMap="OrganizationDtoMap">

        select
            o.*,
            (select count(user_role.id)
             from user_role
             where o.id = user_role.source_id)       as countOrgAdmin,
            (select count(workspace.id)
             from workspace
             where workspace.organization_id = o.id) as countWorkspace
        from
        (

        SELECT
        a.*
        FROM (select *, GET_ROOT_ORG_ID(id) as root_id from organization) a
        left join ((select *, GET_ROOT_ORG_ID(id) as root_id from organization)) b on a.root_id = b.root_id and a.level &lt;= b.level
        group by
        a.root_id,
        a.level,
        a.pid,a.id
        order by a.root_id, a.level,a.pid,a.id

        ) o
        where 1=1
        <if test="map.id!=null">
            and o.id = #{map.id}
        </if>
        <if test="map.name!=null">
            and o.name like #{map.name}
        </if>
        <if test="map.orgIds != null">
            and o.id in
            <foreach collection="map.orgIds" item="orgId" index="index" open="(" close=")" separator=",">
                #{orgId}
            </foreach>
        </if>

    </select>


    <update id="updateOrganization" parameterType="com.fit2cloud.commons.server.base.domain.Organization">
        update organization
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            pid = #{pid,jdbcType=VARCHAR},
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>